buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.3.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'

jar {
    baseName = 'roomserver'
    version =  '0.1.0'
}

repositories {
	maven { url "http://ftp1.digi.com/support/m-repo" }
    jcenter()
    mavenCentral()
}

sourceCompatibility = 1.7
targetCompatibility = 1.7

configurations {
 compile.exclude module:'slf4j-jdk14'
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-amqp")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile('com.fasterxml.jackson.core:jackson-core:2.7.3')
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    compile("org.springframework.boot:spring-boot-starter-security")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework:spring-messaging")
    compile("org.hsqldb:hsqldb:2.3.2");
    compile group: 'com.pi4j', name: 'pi4j-core', version: '1.0'
    compile group: 'com.digi.xbee', name: 'xbjlib', version: '1.0.1'
    compile group: 'org.rxtx', name: 'rxtx-native', version: '2.2', classifier: 'linux_x86_64'
    
    
    testCompile("junit:junit")
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}

task stage(type: Copy, dependsOn: [clean, build]) {
    from jar.archivePath
    into project.rootDir
    rename {
        'app.jar'
    }
}
stage.mustRunAfter(clean)

clean << {
    project.file('app.jar').delete()
}
